name: Deploy

on:
  push:
    branches:
      - main

  pull_request: ~
  workflow_dispatch: ~

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull images
        run: docker compose pull --ignore-pull-failures || true
      - name: Start services
        run: docker compose up -d
      - name: Create test database
        run: |
          cd ..
          docker compose exec php bin/console d:d:d --force
          docker compose exec php bin/console d:d:c
          docker compose exec php bin/console d:s:u --force
          docker compose exec php bin/console d:f:l --no-interaction
      - name: Doctrine Schema Validator
        run: docker-compose exec -T php bin/console doctrine:schema:validate --skip-sync
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v1
      - name: Zip Folder
        run: |
          zip -r Carbon.zip . -x ".git/*" ".github/*"

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          PASSWORD: ${{ secrets.PASSWORD }}
          #KEY: ${{ secrets.SSHKEY }}
        with:
          source: "Carbon.zip"
          target: "/root"

      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          PASSWORD: ${{ secrets.PASSWORD }}
          #KEY: ${{ secrets.SSHKEY }}
          script: |
            unzip -o /root/Carbon.zip -d /root/Carbon
            cd /root/Carbon
            echo '${{ secrets.ENV }}' > .env
            docker-compose up -d
            docker compose exec php bin/console make:mig
            docker compose exec php bin/console d:m:m 
            docker compose exec php bin/console d:f:l --no-interaction
